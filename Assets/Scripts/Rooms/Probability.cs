//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
namespace AssemblyCSharp
{
	public class Probability<T>
	{
		public static Random random = new Random();
		List<Pair<T,double>> prob = new List<Pair<T,double>>();
		public Probability()
		{
		}

		public void addProb(T elem, double prob)
		{
			addProb(new Pair<T,double>(elem,prob));
		}

		public void addProb(Pair<T,double> p)
		{
			prob.Add (p);
		}

		public T roll()
		{
			double total = 0;
			foreach(Pair<T,double> p in prob)
			{
				total += p.Second;
			}

			double rand = random.NextDouble() * total;

			foreach(Pair<T,double> p in prob)
			{
				rand -= p.Second;
				if(rand < 0) return p.First;
			}
			// UNREACHABLE
			return prob[prob.Count-1].First;
		}
	}
}

